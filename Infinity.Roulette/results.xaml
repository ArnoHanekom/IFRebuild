<Window x:Class="Infinity.Roulette.Results"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Infinity.Roulette"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        Closed="Window_Closed" ui:WindowHelper.UseModernWindowStyle="True"
        WindowStartupLocation="CenterScreen" UseLayoutRounding="True" AllowsTransparency="True"
        WindowStyle="None" BorderThickness="0" ui:TitleBar.ExtendViewIntoTitleBar="True"
        Background="Transparent" Title="Results" SizeToContent="WidthAndHeight" MinWidth="600"
        MinHeight="400">
  <ui:TitleBar.Style>
    <Style TargetType="{x:Type ui:TitleBarControl}">
      <Setter Property="FrameworkElement.Margin" Value="2"/>
    </Style>
  </ui:TitleBar.Style>
  <Border BorderBrush="Black" BorderThickness="2" CornerRadius="10">
    <Border.Background>
      <ImageBrush ImageSource="{StaticResource background-image}"/>
    </Border.Background>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="35"/>
        <RowDefinition/>
      </Grid.RowDefinitions>
      <Grid Row="1">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Button Click="btnResults_Click" x:Name="btnResults" Height="45" HorizontalAlignment="Right"
                VerticalAlignment="Top" Grid.Row="0" Width="150" HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center" Style="{StaticResource neon-button}"
                BorderBrush="{StaticResource neon-yellow}" Foreground="{StaticResource neon-yellow}"
                Background="Black" TabIndex="10" Content="R E F R E S H"/>
        <TabControl x:Name="tcResults" Grid.Row="1" Margin="5">
          <TabItem x:Name="tiAvailableResults" IsSelected="True" Header="Results" Background="Transparent"
                   BorderBrush="Transparent">
            <Grid>
              <Border BorderBrush="{StaticResource neon-light-blue}" BorderThickness="2" CornerRadius="10" Padding="5"
                      Margin="0,0,2,2">
                <Grid>
                  <DataGrid x:Name="dgResults" AutoGenerateColumns="False" EnableRowVirtualization="True" MaxHeight="500"
                            Foreground="{StaticResource neon-light-blue}" CanUserReorderColumns="False"
                            CanUserSortColumns="False" CanUserResizeColumns="False" SnapsToDevicePixels="True"
                            UseLayoutRounding="True" ItemsSource="{Binding ResultList, IsAsync=True}">
                    <DataGrid.ColumnHeaderStyle>
                      <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Control.Background" Value="Transparent"/>
                        <Setter Property="Control.VerticalContentAlignment" Value="Bottom"/>
                      </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.RowHeaderStyle>
                      <Style TargetType="{x:Type DataGridRowHeader}">
                        <Setter Property="Control.Background" Value="Transparent"/>
                      </Style>
                    </DataGrid.RowHeaderStyle>
                    <DataGrid.CellStyle>
                      <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Control.Background" Value="Transparent"/>
                      </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                      <DataGridTextColumn Header="Table #" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                          Binding="{Binding TableId, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="Control.FontWeight" Value="Bold"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                      </DataGridTextColumn>
                      <DataGridTextColumn Header="R1W" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                          Binding="{Binding FirstRowWin, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="Control.FontWeight" Value="Bold"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                      </DataGridTextColumn>
                      <DataGridTextColumn Header="TW" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                          Binding="{Binding HighestColumnWin, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="Control.FontWeight" Value="Bold"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                      </DataGridTextColumn>
                      <DataGridTextColumn Header="TW 0s" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                          Binding="{Binding ColumnWinZeroCount, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="Control.FontWeight" Value="Bold"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                      </DataGridTextColumn>
                      <DataGridTextColumn Header="TW 1s" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                          Binding="{Binding ColumnWinOneCount, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="Control.FontWeight" Value="Bold"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                      </DataGridTextColumn>
                      <DataGridTextColumn Header="Counts" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                          Binding="{Binding Counts, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="Control.FontWeight" Value="Bold"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                      </DataGridTextColumn>
                      <DataGridTextColumn Header="Rows" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                          Binding="{Binding Rows, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="Control.FontWeight" Value="Bold"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                      </DataGridTextColumn>
                      <DataGridTextColumn Header="GS" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                          Binding="{Binding GS, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="Control.FontWeight" Value="Bold"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                      </DataGridTextColumn>
                      <DataGridTextColumn Header="Max GS" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                          Binding="{Binding MaxGS, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="Control.FontWeight" Value="Bold"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                      </DataGridTextColumn>
                      <DataGridCheckBoxColumn Binding="{Binding RunSpinfile, IsAsync=True}">
                        <DataGridColumn.CellStyle>
                          <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
                          </Style>
                        </DataGridColumn.CellStyle>
                        <DataGridColumn.Header>
                          <Grid Background="Transparent" Margin="10" VerticalAlignment="Bottom">
                            <Grid.RowDefinitions>
                              <RowDefinition/>
                              <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition/>
                              <ColumnDefinition/>
                              <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Text="Run Spinfile?" FontSize="18"
                                       FontWeight="SemiBold" HorizontalAlignment="Center" Margin="0,0,0,5"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=Foreground}"/>
                            <CheckBox x:Name="cbRunSpinfileAll" Grid.Row="1" Grid.Column="0" Content="All?" HorizontalAlignment="Left"
                                      MinWidth="0" Width="Auto" Foreground="{StaticResource neon-light-blue}"
                                      Style="{StaticResource cbBlue}" FontWeight="SemiBold"/>
                            <CheckBox x:Name="cbRunSpinfileLimit" Grid.Row="1" Grid.Column="1" Content="Limits?"
                                      HorizontalAlignment="Right" MinWidth="0" Width="Auto" FontWeight="SemiBold"
                                      Foreground="{StaticResource neon-light-blue}" Style="{StaticResource cbBlue}"/>
                            <CheckBox x:Name="cbRunSpinfileR1W" Grid.Row="1" Content="R1W?" Grid.Column="2" HorizontalAlignment="Right"
                                      MinWidth="0" Width="Auto" FontWeight="SemiBold" Foreground="{StaticResource neon-light-blue}"
                                      Style="{StaticResource cbBlue}"/>
                          </Grid>
                        </DataGridColumn.Header>
                      </DataGridCheckBoxColumn>
                    </DataGrid.Columns>
                  </DataGrid>
                </Grid>
              </Border>
            </Grid>
          </TabItem>
          <TabItem x:Name="tiOpenedResults" IsSelected="False" Header="Opened Results" Margin="5,0,-5,0"
                   Background="Transparent" BorderBrush="Transparent">
            <Border BorderBrush="{StaticResource neon-light-blue}" BorderThickness="2" CornerRadius="10" Padding="5"
                    Margin="0,0,2,2">
              <Grid>
                <DataGrid x:Name="dgOpenedResults" AutoGenerateColumns="False" Foreground="{StaticResource neon-light-blue}">
                  <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                      <Setter Property="Control.Background" Value="Transparent"/>
                      <Setter Property="Control.VerticalContentAlignment" Value="Bottom"/>
                    </Style>
                  </DataGrid.ColumnHeaderStyle>
                  <DataGrid.RowHeaderStyle>
                    <Style TargetType="{x:Type DataGridRowHeader}">
                      <Setter Property="Control.Background" Value="Transparent"/>
                    </Style>
                  </DataGrid.RowHeaderStyle>
                  <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                      <Setter Property="Control.Background" Value="Transparent"/>
                    </Style>
                  </DataGrid.CellStyle>
                  <DataGrid.Columns>
                    <DataGridTextColumn Header="Table #" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                        Binding="{Binding TableId, IsAsync=True}">
                      <DataGridColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                          <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                          <Setter Property="Control.FontWeight" Value="Bold"/>
                        </Style>
                      </DataGridColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="R1W" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                        Binding="{Binding TableFirstRowWins, IsAsync=True}">
                      <DataGridColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                          <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                          <Setter Property="Control.FontWeight" Value="Bold"/>
                        </Style>
                      </DataGridColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="TW" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                        Binding="{Binding TableHighestColumnWin, IsAsync=True}">
                      <DataGridColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                          <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                          <Setter Property="Control.FontWeight" Value="Bold"/>
                        </Style>
                      </DataGridColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="TW 0s" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                        Binding="{Binding TableColumnWinZeroCount, IsAsync=True}">
                      <DataGridColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                          <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                          <Setter Property="Control.FontWeight" Value="Bold"/>
                        </Style>
                      </DataGridColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="TW 1s" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                        Binding="{Binding TableColumnWinOneCount, IsAsync=True}">
                      <DataGridColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                          <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                          <Setter Property="Control.FontWeight" Value="Bold"/>
                        </Style>
                      </DataGridColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Counts" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                        Binding="{Binding Counts, IsAsync=True}">
                      <DataGridColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                          <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                          <Setter Property="Control.FontWeight" Value="Bold"/>
                        </Style>
                      </DataGridColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Rows" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                        Binding="{Binding Rows, IsAsync=True}">
                      <DataGridColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                          <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                          <Setter Property="Control.FontWeight" Value="Bold"/>
                        </Style>
                      </DataGridColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="GS" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                        Binding="{Binding GS, IsAsync=True}">
                      <DataGridColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                          <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                          <Setter Property="Control.FontWeight" Value="Bold"/>
                        </Style>
                      </DataGridColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Max GS" HeaderStyle="{DynamicResource ResultsGridHeaderStyle}"
                                        Binding="{Binding MaxGS, IsAsync=True}">
                      <DataGridColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                          <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                          <Setter Property="Control.FontWeight" Value="Bold"/>
                        </Style>
                      </DataGridColumn.CellStyle>
                    </DataGridTextColumn>
                  </DataGrid.Columns>
                </DataGrid>
              </Grid>
            </Border>
          </TabItem>
        </TabControl>
        <Grid x:Name="SpinPercentage" Visibility="Visible" Row="2" Margin="5, 0, 5, 5">
          <ui:ProgressBar x:Name="SpinProgress" CornerRadius="5" MinHeight="20" Margin="2" Height="20"
                          Foreground="{StaticResource neon-purple}" Value="{Binding SpinPercentage}"/>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock x:Name="SpinProgressText" FontSize="14" FontWeight="Bold" Margin="0,0,0,2"
                       Foreground="{StaticResource neon-green}" Text="{Binding ElementName=SpinProgress, Path=Value}">
              <UIElement.Effect>
                <DropShadowEffect Color="Black" ShadowDepth="1" Opacity="1" BlurRadius="5"/>
              </UIElement.Effect>
            </TextBlock>
            <TextBlock FontSize="14" FontWeight="Bold" Margin="0,0,0,2" Foreground="{StaticResource neon-green}" Text="%">
              <UIElement.Effect>
                <DropShadowEffect Color="Black" ShadowDepth="1" Opacity="1" BlurRadius="5"/>
              </UIElement.Effect>
            </TextBlock>
          </StackPanel>
          <Border BorderBrush="{StaticResource neon-light-blue}" BorderThickness="2" CornerRadius="10"/>
        </Grid>
      </Grid>
    </Grid>
  </Border>
</Window>